name: Reconcile Preview Pool

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  reconcile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine desired state from app repo PRs
        id: decide
        env:
          APP_REPO_PAT: ${{ secrets.APP_REPO_PAT }}
        run: |
          if [ -n "$APP_REPO_PAT" ]; then
            RESP=$(curl -s -H "Authorization: token $APP_REPO_PAT" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/jalantechnologies/flask-react-template/pulls?state=open&per_page=100")
          else
            echo "APP_REPO_PAT not set; using unauthenticated request (public repos only, 60 req/hr)."
            RESP=$(curl -s -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/jalantechnologies/flask-react-template/pulls?state=open&per_page=100")
          fi
          COUNT=$(echo "$RESP" | jq '[ .[] | select(.draft==false) ] | length')
          echo "open_non_draft_prs=$COUNT" >> $GITHUB_OUTPUT
          if [ "$COUNT" -gt 0 ]; then
            echo "enable=true" >> $GITHUB_OUTPUT
          else
            echo "enable=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
        run: |
          terraform init -input=false

      - name: Terraform Apply (reconcile)
        run: |
          PREVIEW_SIZE="${{ secrets.PREVIEW_NODE_SIZE }}"
          if [ -z "$PREVIEW_SIZE" ]; then PREVIEW_SIZE="s-2vcpu-2gb"; fi
          if [ "${{ steps.decide.outputs.enable }}" = "true" ]; then
            terraform apply -auto-approve -input=false \
              -var "enable_preview_pool=true" \
              -var "do_token=${{ secrets.DO_TOKEN }}" \
              -var "do_cluster_name=${{ secrets.DO_CLUSTER_NAME }}" \
              -var "do_cluster_version=${{ secrets.DO_CLUSTER_VERSION }}" \
              -var "do_alert_email=${{ secrets.DO_ALERT_EMAIL }}" \
              -var "cluster_issuer_email=${{ secrets.CLUSTER_ISSUER_EMAIL }}" \
              -var "preview_node_size=$PREVIEW_SIZE"
          else
            terraform apply -auto-approve -input=false \
              -var "enable_preview_pool=false" \
              -var "do_token=${{ secrets.DO_TOKEN }}" \
              -var "do_cluster_name=${{ secrets.DO_CLUSTER_NAME }}" \
              -var "do_cluster_version=${{ secrets.DO_CLUSTER_VERSION }}" \
              -var "do_alert_email=${{ secrets.DO_ALERT_EMAIL }}" \
              -var "cluster_issuer_email=${{ secrets.CLUSTER_ISSUER_EMAIL }}" \
              -var "preview_node_size=$PREVIEW_SIZE"
          fi

