name: Reconcile Preview Pool

on:
  workflow_dispatch:
    # Manual triggering for testing and on-demand reconciliation

jobs:
  reconcile-preview-pool:
    name: Auto-manage Preview Pool
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Infrastructure Repo
        uses: actions/checkout@v4

      - name: Check Open PRs in App Repo
        id: check-prs
        run: |
          # Check for open, non-draft PRs in the flask-react-template repo
          OPEN_PRS=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/jalantechnologies/flask-react-template/pulls?state=open" \
            | jq '[.[] | select(.draft == false)] | length')
          
          echo "open_prs=$OPEN_PRS" >> $GITHUB_OUTPUT
          echo "Found $OPEN_PRS open non-draft PRs"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Get Current Preview Pool Status
        id: current-status
        run: |
          # Check if preview pool currently exists
          terraform show -json | jq -r '.values.root_module.child_modules[] | select(.address == "module.digital_ocean") | .resources[] | select(.address == "module.digital_ocean.digitalocean_kubernetes_node_pool.do_cluster_preview_pool[0]") | .values.name' > /tmp/preview_pool_status || echo "not_found" > /tmp/preview_pool_status
          
          if [ -s /tmp/preview_pool_status ] && [ "$(cat /tmp/preview_pool_status)" != "not_found" ]; then
            echo "preview_pool_exists=true" >> $GITHUB_OUTPUT
            echo "Preview pool currently exists"
          else
            echo "preview_pool_exists=false" >> $GITHUB_OUTPUT
            echo "Preview pool currently does not exist"
          fi

      - name: Enable Preview Pool (if needed)
        if: steps.check-prs.outputs.open_prs > 0 && steps.current-status.outputs.preview_pool_exists == 'false'
        run: |
          echo " Enabling preview pool - found ${{ steps.check-prs.outputs.open_prs }} open PR(s)"
          terraform apply -var="enable_preview_pool=true"
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
          TF_VAR_do_cluster_name: ${{ vars.DO_CLUSTER_NAME }}
          TF_VAR_do_cluster_version: ${{ vars.DO_CLUSTER_VERSION }}
          TF_VAR_do_alert_email: ${{ vars.DO_ALERT_EMAIL }}
          TF_VAR_cluster_issuer_email: ${{ vars.CLUSTER_ISSUER_EMAIL }}

      - name: Disable Preview Pool (if needed)
        if: steps.check-prs.outputs.open_prs == 0 && steps.current-status.outputs.preview_pool_exists == 'true'
        run: |
          echo " Disabling preview pool - no open PRs found"
          terraform apply -var="enable_preview_pool=false"
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
          TF_VAR_do_cluster_name: ${{ vars.DO_CLUSTER_NAME }}
          TF_VAR_do_cluster_version: ${{ vars.DO_CLUSTER_VERSION }}
          TF_VAR_do_alert_email: ${{ vars.DO_ALERT_EMAIL }}
          TF_VAR_cluster_issuer_email: ${{ vars.CLUSTER_ISSUER_EMAIL }}

      - name: Report Status
        run: |
          echo " Reconciliation Summary:"
          echo "  - Open PRs: ${{ steps.check-prs.outputs.open_prs }}"
          echo "  - Preview Pool Exists: ${{ steps.current-status.outputs.preview_pool_exists }}"
          if [ "${{ steps.check-prs.outputs.open_prs }}" -gt 0 ]; then
            echo "  - Action: Preview pool should be enabled"
          else
            echo "  - Action: Preview pool should be disabled for cost savings"
          fi
